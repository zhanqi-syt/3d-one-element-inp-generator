## ----------------------------------------------------------------
## Yutai Su(buaa_syt@126.com)
## One Element Generated by Abaqus Python script(C3D8_PF)
## 24/11/2023
## ----------------------------------------------------------------

# 0.0 Initialization
# 0.1 Define Model Name
ModelName = "OneEleModel_C3D8_PF"
# 0.2 Define Output Path
# OutputPath = "D:/temp/20231121_OneEle/"
OutputPath = ""
# 0.4 Define Output Path
EleSize = 1.0
# 0.5 Define Output Path
TimePeriod = 1.0
# 0.6 Define Output Path
Inc = 0.01
MaxIncNum = 10000
# 0.7 Define Output Path
MaxStrain = 0.05
# 0.7 Material properties
DesProp = ElaProp = UMATProp = False
USDFLDProp = OutVarProp = ConductProp = False
SHeatProp = CTEProp = SDVProp = False
PlasticProp = PFProp = False
# If needed, please provide a value (float or int need to be defined);
# if not needed, delete the variable below.
# # 0.7.1 Density
# DesProp=1.0
# 0.7.2 Elastic
#ElaProp=[10100, 0.3]
# 0.7.3 UserMaterial
UMATProp=[1.0, 2.0, 3.0, 4.0, 5.0, 6.0]
# # 0.7.4 UserDefinedField
# USDFLDProp=1
# # 0.7.5 UserOutputVariables
# OutVarProp=100
# # 0.7.6 Conductivity
# ConductProp=1.0
# # 0.7.7 SpecificHeat
# SHeatProp=1.0
# # 0.7.8 Expansion
# CTEProp=[0.000001, 298.15]
# 0.7.9 Depvar
SDVProp=100
# 0.7.10 Plastic
#PlasticProp=[[1.0, 0.0], [1.2, 0.01], [1.0, 0.02]]
# 0.7.11 Phase field properties(lc, Gc)
PFProp = [0.0004, 0.012]

# 1.0 Modeling
# 1.1 loading inp files
inp0 = open("c3d8.inp", "r").readlines()
inp1 = open(OutputPath+ModelName+".inp", "w")
# 1.2 Element Size Update
inp0[8] = "1, "+str(EleSize)+", "+str(EleSize)+", "+str(EleSize)+"\n"
inp0[9] = "2, "+str(EleSize)+", 0., "+str(EleSize)+"\n"
inp0[10] = "3, "+str(EleSize)+", "+str(EleSize)+", 0.\n"
inp0[11] = "4, "+str(EleSize)+", 0., 0.\n"
inp0[12] = "5, 0., "+str(EleSize)+", "+str(EleSize)+"\n"
inp0[13] = "6, 0., 0., "+str(EleSize)+"\n"
inp0[14] = "7, 0., "+str(EleSize)+", 0.\n"
inp0[15] = "8, 0., 0., 0.\n"
# 1.3 Boundary conditions
inp0[58] = "0., 0., "+str(TimePeriod)+", "+str(MaxStrain*EleSize)+"\n"
# 1.4 Analysis step
inp0[75] = "*Step, name=Step-1, nlgeom=YES, inc="+str(MaxIncNum)+"\n"
inp0[77] = str(Inc)+", "+str(TimePeriod)+", 1e-32, "+str(Inc)+"\n"
inp0[85] = "*Output, field, time interval="+str(TimePeriod*Inc)+"\n"
# 1.5 Material properties
## Density
if DesProp:
    inp0.insert(61, "*Density\n")
    inp0.insert(62, str(DesProp)+",\n")
## Elastic
if ElaProp:
    inp0.insert(61, "*Elastic\n")
    inp0.insert(62, str(ElaProp[0])+","+str(ElaProp[1])+"\n")
## User Material
if UMATProp:
    inp0.insert(61, "*User Material, constants="+str(len(UMATProp))+"\n")
    nline = 61
    i = 0
    while i < len(UMATProp):
        nline = nline+1
        props = []
        j = 0
        while j < 8:
            props.append(' ')
            if i < len(UMATProp):
                props.append(str(UMATProp[i]))
                props.append(',')
            else:
                break
            i += 1
            j += 1
        props.append("\n")
        inp0.insert(nline, "".join(props))
## User Defined Field
if USDFLDProp:
    inp0.insert(61, "*User Defined Field\n")
## User Output Variables
if OutVarProp:
    inp0.insert(61, "*User Output Variables\n")
    inp0.insert(62, str(OutVarProp)+",\n")
## Conductivity
if ConductProp:
    inp0.insert(61, "*Conductivity\n")
    inp0.insert(62, str(ConductProp)+",\n")
## Specific Heat
if SHeatProp:
    inp0.insert(61, "*Specific Heat\n")
    inp0.insert(62, str(SHeatProp)+",\n")
## Expansion
if CTEProp:
    inp0.insert(61, "*Expansion, zero="+str(CTEProp[1])+"\n")
    inp0.insert(62, str(CTEProp[0])+",\n")
## Solution Dependent Variables
if SDVProp:
    inp0.insert(61, "*Depvar\n")
    inp0.insert(62, str(SDVProp)+",\n")
## Plastic
if PlasticProp:
    inp0.insert(61, "*Plastic\n")
    for i in range(len(PlasticProp)):
        inp0.insert(62+i, str(PlasticProp[i][0])+", "+str(PlasticProp[i][1])+"\n")

# 2.0 Outputs(INP)
i = 0
while i < len(inp0):
    if "type=C3D8" in inp0[i]:
        inp1.write("*User element, nodes=8, type=U1, properties=3, coordinates=3, Variables=24\n4\n")
        inp1.write("*Element, type=U1, elset=Set-Phase\n")
        inp1.write(inp0[i+1])
        inp1.write("*Uel property, elset=Set-Phase\n")
        inp1.write(str(PFProp[0])+", "+str(PFProp[1])+"\n")
        inp1.write(inp0[i][0:-1]+", elset=Set-All\n")
        inp1.write("2"+inp0[i+1][1::])
        i=i+1
    elif "*Elset," in inp0[i]:
        i=i+1
    else:
        inp1.write(inp0[i])
    i=i+1
inp1.close()
